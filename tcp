#!/usr/bin/env php
<?php
//declare(ticks = 1);
require __DIR__.'/vendor/autoload.php';

define("HOME", __DIR__);

date_default_timezone_set("PRC");
use Workerman\Worker;
$send_count  = 0;
$send_count2 = 0;

$host = "0.0.0.0";
$port = 9997;

foreach ($argv as $item) {
    if (strpos($item,"--host") === 0)
        list(,$host) = explode("=",$item);
    if (strpos($item,"--port") === 0)
        list(,$port) = explode("=",$item);
}

// Create a Websocket server
$ws_worker = new Worker("tcp://".$host.":".$port);

// 4 processes
$ws_worker->count = 1;

// Emitted when new connection come
$ws_worker->onConnect = function($connection)
{
    echo "New connection\n";
};

// Emitted when data received
$ws_worker->onMessage = function($connection, $data)
{
    global $ws_worker,$send_count,$send_count2;
    //$current_process_id = get_current_processid();

    // Send hello $data
    //$connection->send('hello ' . $data);
    ob_start();
    $path[] = HOME . "/cache/tcp/*";
    while (count($path) != 0) {
        $v = array_shift($path);
        foreach (glob($v) as $item) {
            if (is_file($item)) {
                $send_count++;
                $content = file_get_contents($item);
                if (!$content) {
                    continue;
                }
                foreach ($ws_worker->connections as $c) {
                    echo "发送tcp消息：", $content,"\r\n";
                    $res = $c->send($content."\r\n\r\n\r\n");
                    if ($res) {
                        echo "成功\r\n";
                    } else {
                        echo "失败\r\n";
                    }
                    $send_count2++;
                }

                echo $send_count.":".$send_count2,"\r\n\r\n";
                file_put_contents(HOME."/logs/tcp", $send_count.":".$send_count2);

                unlink($item);
            }
        }
    }
    $debug = ob_get_contents();
    ob_end_clean();

    if ($debug) {
        echo $debug;
    }

    unset($debug, $recv_msg);
};

// Emitted when connection closed
$ws_worker->onClose = function($connection)
{
    echo "Connection closed\n";
};

$ws_worker->onWorkerStart = function(){
    //file_put_contents(HOME."/tcp.pid",get_current_processid()."   ", FILE_APPEND);
};
// Run worker
Worker::runAll();
